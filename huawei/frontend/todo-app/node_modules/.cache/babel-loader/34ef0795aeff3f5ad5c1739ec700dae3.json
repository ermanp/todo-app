{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\huawei\\\\frontend\\\\todo-app\\\\src\\\\components\\\\todo\\\\LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from './AuthenticationService.js';\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: 'erman',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    // console.log(this.state);\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    if (this.state.username === 'erman' && this.state.password === 'dummy') {\n      AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n      this.props.history.push(`/welcome/${this.state.username}`);\n    } else {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n      console.log('Fail');\n    }\n\n    AuthenticationService.executeJwtAuthenticationService(this.state.username, this.state.password).then(response => {\n      AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token);\n      this.props.history.push(`/welcome/${this.state.username}`);\n    }).catch(() => {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n      console.log('Fail');\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.hasLoginFailed && React.createElement(\"div\", {\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Invalid Credentials\"), this.state.showSuccessMessage && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Login Successful\"), \"User Name \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), \"Password \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"di\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.loginClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Login\"))));\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["C:/Dev/huawei/frontend/todo-app/src/components/todo/LoginComponent.jsx"],"names":["React","Component","AuthenticationService","LoginComponent","constructor","props","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","name","value","registerSuccessfulLogin","history","push","console","log","executeJwtAuthenticationService","then","response","registerSuccessfulLoginForJwt","data","token","catch","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport AuthenticationService from './AuthenticationService.js'\r\n\r\nclass LoginComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: 'erman',\r\n            password: '',\r\n            hasLoginFailed: false,\r\n            showSuccessMessage: false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.loginClicked = this.loginClicked.bind(this);\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n        // console.log(this.state);\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    loginClicked() {\r\n        if (this.state.username === 'erman' && this.state.password === 'dummy') {\r\n            AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password)\r\n\r\n            this.props.history.push(`/welcome/${this.state.username}`)\r\n        }\r\n        else {\r\n            this.setState({ showSuccessMessage: false })\r\n            this.setState({ hasLoginFailed: true })\r\n            console.log('Fail')\r\n        \r\n        }\r\n\r\n\r\n        AuthenticationService.executeJwtAuthenticationService(this.state.username, this.state.password)\r\n            .then(\r\n                (response) => {\r\n                    AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\r\n\r\n                    this.props.history.push(`/welcome/${this.state.username}`)\r\n                }\r\n            ).catch(\r\n                () => {\r\n                    this.setState({ showSuccessMessage: false })\r\n                    this.setState({ hasLoginFailed: true })\r\n                    console.log('Fail')\r\n                }\r\n            )\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Login</h1>\r\n                <div className=\"container\">\r\n                {/*<ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}/>*/}\r\n                {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\r\n                {this.state.showSuccessMessage && <div>Login Successful</div>}\r\n                User Name <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                Password <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                <br/>\r\n                <di>\r\n                <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\r\n                </di>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginComponent"]},"metadata":{},"sourceType":"module"}